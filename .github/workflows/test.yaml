name: Pull Request Test

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  e2e-tests:
    runs-on: ubuntu-latest

    services:
      db:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        ports:
          - 3306:3306

    steps:
      - name: Checkout frontend repository
        uses: actions/checkout@v3

      - name: Checkout backend repository
        uses: actions/checkout@v3
        with:
          repository: RenasAli/airline-backend
          path: airline-backend

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
        
      - name: Create database and tables
        run: |
          mysql -h 127.0.0.1 -u ${{ secrets.MYSQL_USER }} -p${{ secrets.MYSQL_PASSWORD }} ${{ secrets.MYSQL_DATABASE }} < ./airline-backend/backend/Database/Scripts/airline_system.sql

      - name: Seed database
        run: |
          mysql -h 127.0.0.1 -u ${{ secrets.MYSQL_USER }} -p${{ secrets.MYSQL_PASSWORD }} ${{ secrets.MYSQL_DATABASE }} < ./airline-backend/backend/Database/Scripts/sample_data.sql

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Start the .NET application as a background task and wait for it to start
        env:
          MYSQL_CONNECTION_STRING: ${{ secrets.MYSQL_CONNECTION_STRING }}
          JWTSecretKey: ${{ secrets.JWT_SECRET_KEY }}
          Issuer: ${{ secrets.ISSUER }}
          Audience: ${{ secrets.AUDIENCE }}
          SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
          SENDER_PASSWORD: ${{ secrets.SENDER_PASSWORD }}

        run: dotnet run --project ./airline-backend/backend & sleep 10

      - name: Start the React application as a background task and wait for it to start
        env: 
          VITE_BASE_URL: ${{ secrets.VITE_BASE_URL }}
        run: |
          npm install
          npm run dev & sleep 10

      - name: Run Cypress e2e-tests
        run: npx cypress run --headless